{"version":3,"file":"static/js/560.50f154f5.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/SearchMovie/SearchMovie.jsx","servises/Api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ error }) => {\n  return (\n    <p className=\"c-error\">\n      Oops, some error occured. Please, try again later. Error: {error}\n    </p>\n  );\n};\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const GridItem = styled.li`\n  text-align: center;\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BASE_IMAGE_URL } from 'servises/Api';\nimport { format } from 'date-fns';\nimport notAvailable from '../../img/affiche_nondisponible.jpg';\nimport { GridItem } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const posterUrl = movie.poster_path\n    ? `${BASE_IMAGE_URL}w300${movie.poster_path}`\n    : notAvailable;\n\n  const releaseDate = movie.release_date ? (\n    <p>{format(Date.parse(movie.release_date), 'dd MMMM yyyy')}</p>\n  ) : null;\n\n  const location = useLocation();\n\n  return (\n    <GridItem>\n      <Link\n        key={movie.id}\n        state={{ from: location }}\n        to={`/movies/${movie.id}`}\n      >\n        <img src={posterUrl} alt={movie.original_title} />\n        <p>\n          <strong>{movie.original_title}</strong>\n        </p>\n      </Link>\n      {releaseDate}\n      {/* <p>{format(Date.parse(movie.release_date), 'dd MMMM yyyy')}</p> */}\n    </GridItem>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const GridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n  list-style: none;\n  padding: 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport { GridContainer } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const showMovies = Array.isArray(movies) && movies.length > 0;\n\n  return (\n    <GridContainer>\n      {showMovies &&\n        movies.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n    </GridContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'servises/Api';\nimport MoviesList from 'components/MoviesList';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\n\nconst SearchMovie = () => {\n  const [searchMovie, setSearchMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryString = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryString) return;\n\n    const fetchMoviesByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getMovieByQuery(queryString);\n        setSearchMovie(response.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [queryString]);\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n\n    const searchValue = e.target.elements.searchValue.value;\n    setSearchParams({\n      query: searchValue,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Search movie</h2>\n      <h3>\n        Welcome. Millions of movies, TV shows and people to discover. Explore\n        now.\n      </h3>\n      <form onSubmit={hendleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchValue\"\n          autoComplete=\"off\"\n          required\n          placeholder=\"Enter movie title\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error !== null && <Error error={error} />}\n      {isLoading && <Loader />}\n      <MoviesList movies={searchMovie} />\n    </div>\n  );\n};\n\nexport default SearchMovie;\n","import axios from 'axios';\n\nexport const BASE_IMAGE_URL = 'http://image.tmdb.org/t/p/';\n\nconst API_KEY = '2a40eee025ae191ba82a449107daf37f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getReviewInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieByQuery = async searchQuery => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: searchQuery,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n"],"names":["_ref","error","_jsxs","className","children","GridItem","styled","_templateObject","_taggedTemplateLiteral","movie","posterUrl","poster_path","concat","BASE_IMAGE_URL","notAvailable","releaseDate","release_date","_jsx","format","Date","parse","location","useLocation","Link","state","from","to","id","src","alt","original_title","GridContainer","movies","showMovies","Array","isArray","length","map","MovieItem","_useState","useState","_useState2","_slicedToArray","searchMovie","setSearchMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryString","get","useEffect","fetchMoviesByQuery","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getMovieByQuery","sent","results","t0","message","finish","stop","apply","arguments","onSubmit","e","preventDefault","searchValue","target","elements","value","query","type","name","autoComplete","required","placeholder","Error","Loader","MoviesList","API_KEY","axios","getTrandingMovies","params","api_key","language","abrupt","data","getMovieById","_ref2","_callee2","movieId","_context2","_x","getCastInfo","_ref3","_callee3","_context3","_x2","getReviewInfo","_ref4","_callee4","_context4","_x3","_ref5","_callee5","searchQuery","_context5","_x4"],"sourceRoot":""}