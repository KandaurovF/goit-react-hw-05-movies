{"version":3,"file":"static/js/221.c1d11069.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","servises/Api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ error }) => {\n  return (\n    <p className=\"c-error\">\n      Oops, some error occured. Please, try again later. Error: {error}\n    </p>\n  );\n};\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const GridItem = styled.li`\n  text-align: center;\n  border-radius: 5px;\n  border: 1px solid #000000;\n  box-shadow: 3px 3px 10px 0px rgba(0, 0, 0, 0.75);\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { BASE_IMAGE_URL } from 'servises/Api';\nimport { format } from 'date-fns';\nimport notAvailable from '../../img/affiche_nondisponible.jpg';\nimport { GridItem, StyledLink } from './MovieItem.styled';\n\nconst MovieItem = ({ movie }) => {\n  const posterUrl = movie.poster_path\n    ? `${BASE_IMAGE_URL}w300${movie.poster_path}`\n    : notAvailable;\n\n  const releaseDate = movie.release_date ? (\n    <p>{format(Date.parse(movie.release_date), 'dd MMMM yyyy')}</p>\n  ) : null;\n\n  const location = useLocation();\n\n  return (\n    <GridItem>\n      <StyledLink\n        key={movie.id}\n        state={{ from: location }}\n        to={`/movies/${movie.id}`}\n      >\n        <img src={posterUrl} alt={movie.original_title} />\n        <p>\n          <strong>{movie.original_title}</strong>\n        </p>\n      </StyledLink>\n      {releaseDate}\n    </GridItem>\n  );\n};\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const GridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n  list-style: none;\n  padding: 0 40px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieItem from 'components/MovieItem';\nimport { GridContainer } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const showMovies = Array.isArray(movies) && movies.length > 0;\n\n  return (\n    <GridContainer>\n      {showMovies &&\n        movies.map(movie => <MovieItem key={movie.id} movie={movie} />)}\n    </GridContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  padding: 0 40px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getTrandingMovies } from 'servises/Api';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport MoviesList from 'components/MoviesList';\nimport { Heading } from './Home.styled';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [trendingMovies, setTrendingMovies] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const trendingMovies = await getTrandingMovies();\n\n        setTrendingMovies(trendingMovies.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <main>\n      <Heading>Trending today</Heading>\n      {error !== null && <Error error={error} />}\n      {isLoading && <Loader />}\n      <MoviesList movies={trendingMovies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nexport const BASE_IMAGE_URL = 'http://image.tmdb.org/t/p/';\n\nconst API_KEY = '2a40eee025ae191ba82a449107daf37f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getReviewInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieByQuery = async searchQuery => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: searchQuery,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n"],"names":["_ref","error","_jsxs","className","children","GridItem","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","movie","posterUrl","poster_path","concat","BASE_IMAGE_URL","notAvailable","releaseDate","release_date","_jsx","format","Date","parse","location","useLocation","state","from","to","id","src","alt","original_title","GridContainer","movies","showMovies","Array","isArray","length","map","MovieItem","Heading","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setError","_useState5","_useState6","trendingMovies","setTrendingMovies","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_trendingMovies","wrap","_context","prev","next","getTrandingMovies","sent","results","t0","message","finish","stop","apply","arguments","Error","Loader","MoviesList","API_KEY","axios","response","params","api_key","language","abrupt","data","getMovieById","_ref2","_callee2","movieId","_context2","_x","getCastInfo","_ref3","_callee3","_context3","_x2","getReviewInfo","_ref4","_callee4","_context4","_x3","getMovieByQuery","_ref5","_callee5","searchQuery","_context5","query","_x4"],"sourceRoot":""}