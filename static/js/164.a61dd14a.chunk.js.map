{"version":3,"file":"static/js/164.a61dd14a.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","pages/MovieDetail/MovieDetails.styled.js","components/MovieInfo/MovieInfo.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetail/MovieDetail.jsx","servises/Api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({ error }) => {\n  return (\n    <p className=\"c-error\">\n      Oops, some error occured. Please, try again later. Error: {error}\n    </p>\n  );\n};\n\nError.propTypes = {\n  error: PropTypes.string,\n};\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const MovieInfoWrapper = styled.div`\n  border-bottom: 1px solid #000000;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieInfoWrapper } from 'pages/MovieDetail/MovieDetails.styled';\nimport { BASE_IMAGE_URL } from 'servises/Api';\nimport notAvailable from '../../img/affiche_nondisponible.jpg';\nimport { format } from 'date-fns';\n\nconst MovieInfo = ({ movie }) => {\n  const posterUrl = movie.poster_path\n    ? `${BASE_IMAGE_URL}w300${movie.poster_path}`\n    : notAvailable;\n\n  return (\n    <MovieInfoWrapper>\n      <h2>\n        {movie.original_title} ({format(Date.parse(movie.release_date), 'yyyy')}\n        )\n      </h2>\n      <img src={posterUrl} alt={movie.original_title} />\n\n      <p>{movie.vote_average}</p>\n      <p>\n        <strong>Ovrerview</strong>\n      </p>\n      <p>{movie.overview}</p>\n      <p>\n        <strong>Genres</strong>\n      </p>\n      <ul>\n        {movie.genres.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n    </MovieInfoWrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const GridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  gap: 20px;\n  margin-top: 20px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GridItem = styled.li`\n  text-align: center;\n\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMAGE_URL, getCastInfo } from 'servises/Api';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\nimport defaultFemaleImage from '../../img/default_female.png';\nimport defaultMaleImage from '../../img/default_male.png';\nimport { GridContainer, GridItem } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [castInfo, setCastInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchCastInfo = async () => {\n      if (!movieId) return;\n\n      try {\n        setIsLoading(true);\n\n        const castDetails = await getCastInfo(movieId);\n\n        setCastInfo(castDetails);\n        console.log('castDetails', castDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCastInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error !== null && <Error error={error} />}\n      {castInfo !== null && (\n        <div>\n          <h3>Cast</h3>\n          <GridContainer>\n            {castInfo.cast.map(actor => {\n              const actorAvatar = actor.profile_path\n                ? `${BASE_IMAGE_URL}w185${actor.profile_path}`\n                : actor.gender === 1\n                ? defaultFemaleImage\n                : defaultMaleImage;\n\n              return (\n                <GridItem key={actor.id}>\n                  <img src={actorAvatar} alt=\"actor\" />\n                  <p>\n                    <b>{actor.name}</b>\n                  </p>\n                  <p>Caracter: {actor.character}</p>\n                </GridItem>\n              );\n            })}\n          </GridContainer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewInfo } from 'servises/Api';\nimport Error from 'components/Error';\nimport Loader from 'components/Loader';\nimport { format } from 'date-fns';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviewInfo, setReviewInfo] = useState(null);\n\n  useEffect(() => {\n    const fetchRewiews = async () => {\n      if (!movieId) return;\n\n      try {\n        setIsLoading(true);\n\n        const reviewDetails = await getReviewInfo(movieId);\n        setReviewInfo(reviewDetails);\n        console.log('reviewDetails', reviewDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchRewiews();\n  }, [movieId]);\n\n  const showReviews =\n    reviewInfo !== null &&\n    Array.isArray(reviewInfo.results) &&\n    reviewInfo.results.length > 0;\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error !== null && <Error error={error} />}\n      <h3>Reviews</h3>\n      {showReviews ? (\n        <ul>\n          {reviewInfo.results.map(result => (\n            <li key={result.id}>\n              <p>\n                <b>{result.author}</b>\n              </p>\n              <p>{result.content}</p>\n              <p>{format(Date.parse(result.updated_at), 'dd MMMM yyyy')}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No comments yet</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import React from 'react';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport Cast from 'components/Cast';\nimport Reviews from 'components/Reviews';\n\nconst AdditionalInfo = () => {\n  return (\n    <>\n      <div>\n        <h2> Additional information</h2>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Routes>\n        <Route path=\"cast\" element={<Cast />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'servises/Api';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport MovieInfo from 'components/MovieInfo';\nimport AdditionalInfo from 'components/AdditionalInfo';\n\nconst MovieDetail = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      if (!movieId) return;\n\n      try {\n        setIsLoading(true);\n\n        const movieInfo = await getMovieById(movieId);\n\n        setMovie(movieInfo);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <main>\n      {isLoading && <Loader />}\n      {error !== null && <Error error={error} />}\n      <Link to={backLinkHref.current}>Go back</Link>\n      {movie !== null && <MovieInfo movie={movie} />}\n      <AdditionalInfo />\n    </main>\n  );\n};\n\nexport default MovieDetail;\n","import axios from 'axios';\n\nexport const BASE_IMAGE_URL = 'http://image.tmdb.org/t/p/';\n\nconst API_KEY = '2a40eee025ae191ba82a449107daf37f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getCastInfo = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getReviewInfo = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nexport const getMovieByQuery = async searchQuery => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: searchQuery,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n"],"names":["_ref","error","_jsxs","className","children","MovieInfoWrapper","styled","_templateObject","_taggedTemplateLiteral","movie","posterUrl","poster_path","concat","BASE_IMAGE_URL","notAvailable","original_title","format","Date","parse","release_date","_jsx","src","alt","vote_average","overview","genres","map","genre","name","id","GridContainer","GridItem","_templateObject2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","setError","_useState5","_useState6","castInfo","setCastInfo","useEffect","fetchCastInfo","_asyncToGenerator","_regeneratorRuntime","mark","_callee","castDetails","wrap","_context","prev","next","abrupt","getCastInfo","sent","console","log","t0","message","finish","stop","apply","arguments","_Fragment","Loader","Error","cast","actor","actorAvatar","profile_path","gender","character","reviewInfo","setReviewInfo","fetchRewiews","reviewDetails","getReviewInfo","showReviews","Array","isArray","results","length","result","author","content","updated_at","Link","to","Routes","Route","path","element","Cast","Reviews","_location$state$from","_location$state","setMovie","location","useLocation","backLinkHref","useRef","state","from","fetchMovie","movieInfo","getMovieById","current","MovieInfo","AdditionalInfo","API_KEY","axios","getTrandingMovies","response","params","api_key","language","data","_ref2","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","getMovieByQuery","_ref5","_callee5","searchQuery","_context5","query","_x4"],"sourceRoot":""}